name: Java Spring Boot CD

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build JAR for Production
        run: |
          chmod +x gradlew
          ./gradlew clean assemble -Pspring.profiles.active=prod

      - name: Locate and Prepare JAR artifact
        id: get_jar_path
        run: |
          JAR_FILE=$(find build/libs -name "*.jar" | head -n 1) 
          if [ -z "$JAR_FILE" ]; then
            echo "Error: No executable JAR file found!"
            exit 1
          fi
          echo "jar_path=$JAR_FILE" >> $GITHUB_OUTPUT

      - name: Add EC2 Host Key to known_hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_HOST_KEYS }}" > ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: Transfer JAR to EC2 Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: ${{ steps.get_jar_path.outputs.jar_path }}
          target: ~/app/build/libs/
          strip_components: 2

      - name: Deploy and Restart Application on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}

          script: |
            set -eux

            # systemd 서비스를 통해 Spring Boot 애플리케이션을 중지하고 재시작
            # JWT_SECRET_KEY 환경 변수는 EC2의 systemd 서비스 파일에 직접 설정되어야 합니다.
            echo "Stopping existing JoyCrew backend service..."
            sudo systemctl stop joycrew-backend || true # systemd를 통해 서비스 중지

            # JAR 파일에 실행 권한 부여 (scp로 전송 후 권한이 유지되지 않을 수 있으므로)
            DEPLOY_DIR="/home/${{ secrets.SSH_USER }}/app/build/libs"
            JAR_NAME=$(basename "${{ steps.get_jar_path.outputs.jar_path }}")
            sudo chmod +x "$DEPLOY_DIR/$JAR_NAME"

            echo "Starting JoyCrew backend service..."
            sudo systemctl start joycrew-backend # systemd를 통해 서비스 시작

            echo "Checking service status..."
            sudo systemctl status joycrew-backend --no-pager || true # 서비스 상태 확인

      - name: Clean up local SSH key file
        if: always()
        run: rm -f private_key.pem
